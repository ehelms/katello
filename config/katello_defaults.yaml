# This file contains default values for Katello configuration.
#
# :vim:sw=2:ts=2:et:
#
# DO NOT EDIT THIS FILE
#
# Add `foreman_app_root/config/settings.plugins.d/katello.yaml`
# file is required even if it's blank.
#
# Common configuration
#
# The following configuration values are the same for production, test
# and development environments. Values can be overridden bellow.
#
:katello:
  :app_mode: katello
  :app_name: 'Katello'
  :katello_version: # let katello detect the version in configuration postprocess

  :use_cp: # set to true/false if you want to override default
  :use_pulp: # set to true/false if you want to override default
  :use_elasticsearch: # set to true/false if you want to override default

  :rest_client_timeout: 30
  :gpg_strict_validation: false
  :profiling: false

  # Puppet publishing location
  :puppet_repo_root: '/etc/puppet/environments/'

  :elastic_index: katello
  :elastic_url: http://localhost:9200

  :post_sync_url: "http://localhost:3000/katello/api/repositories/sync_complete"

  :simple_search_tokens: [":", " and\\b", " or\\b", " not\\b"]

  :redhat_repository_url: https://cdn.redhat.com

  :notification:
    :polling_seconds: 120

  # Setup your UI search configuration.
  :search:
    # specifies the number of search history elementsthat will be retained for users
    :max_history: 5

    # specifies the number of search favorites that a user may store per search box
    :max_favorites: 5

  # Setup your candlepin environment here
  :candlepin:
    # refers to the url of the candlepin
    # example https://localhost:8443/candlepin
    :url: https://localhost:8443/candlepin

    # Specify your oauth key and secret used to authenticate between Katello and Candlepin
    :oauth_key: katello
    :oauth_secret: katello

    # refers to the apache certificate location that is needed
    # to connect to candlepin over httpts.
    :ca_cert_file:

  # Setup your pulp environment here
  :pulp:
    # refers to the url of the pulp
    # example https://localhost/pulp/api
    :url: https://localhost/pulp/api/v2/

    # Specify your oauth key and secret used to authenticate between Katello and Pulp
    :oauth_key: katello
    :oauth_secret: katello

    :sync_threads: 4
    :bulk_load_size: 100
    # refers to the apache certificate
    # (typically /etc/pki/tls/certs/localhost.crt) location that is needed
    # to connect to pulp over https.
    :ca_cert_file:
    :default_login: admin
    :sync_KBlimit:
    :upload_chunk_size: 1048575 # upload size in bytes to pulp. see SSLRenegBufferSize in apache

  # Setup proxy to use when accessing CDN.
  # Katello calls CDN to retrieve list of repositories for a product
  # Uncomment in case you want this calls to go through your proxy
  :cdn_proxy:
  #    :host: localhost
  #    :port: 3128
  #    :user: login
  #    :password: password

  # when adding a new logger don't forget to add it in here even if it's disabled by default
  # otherwise log trace feature won't work for such logger
  :logging:
    # enable logging output inline in rails console
    :console_inline: true
    # colorize log including level token based on severity
    :colorize: false
    # adds an extra line after each log message with information from which file:line and method
    # was this message logged
    :log_trace: false
    #do not log certain paths (example  /notices/get_new)
    :ignored_paths: []
    # configuration of all loggers used in app
    :loggers:
      # this logger is parent of all other loggers, by default this is the only one having appender
      # which is used by all other loggers
      :root:
        # only messages with severity >= this level from all loggers will be logged
        :level: warn
        # file or syslog, for file variant you can specify other options below like filename,
        # pattern or rolling options
        :type: file
        # 'daily', 'weekly', 'monthly' or number as seconds
        :age: 'weekly'
        # how many old log files to keep (156 = 52 * 3 = 3 years for weekly age)
        :keep: 156
        # logger line pattern, you can use following macros
        #  [%c] name of the logger that generate the log event
        #  [%d] datestamp
        #  [%m] the user supplied log message
        #  [%p] PID of the current process
        #  [%r] the time in milliseconds since the program started
        #  [%T] the name of the thread Thread.current[:name]
        #  [%t] object_id of the thread
        #  [%F] filename where the logging request was issued
        #  [%L] line number where the logging request was issued
        #  [%M] method name where the logging request was issued
        #  [%X{string}] variable set using ::Logging.mdc['string'] =
        :pattern: "[%5l %d %c %X{uuid} #%p] %m\n"
        # log filename for this environment, it will be placed into #{Rails.root}/log directory
        :filename: "production.log"
        # you log files will be stored here
        # note when you log outside of standard rails path you won't see log output in WEBrick
        # STDOUT (usually not wanted in development), to use Rails default path, don't set path
        # path: /var/log/katello

      # you can configure each logger individually, you can turn it off completely by using key
      # 'enabled' or you can adjust it's logging 'level'. If you specify level higher than root
      # logger has, messages below this level are ignored. If you specify lower level than root
      # they are still ignored but you can add appender in Katello::Logging just for this logger
      # and see these logs outside of main log.
      :sql:
        :enabled: false
      :app:
        :enabled: true
      :glue:
        :enabled: true
      :pulp_rest:
        :enabled: true
      :cp_rest:
        :enabled: true
      :cp_proxy:
        :enabled: true
      :foreman_rest:
        :enabled: true
      :roles:
        :enabled: false
      # tire is a special case, all logs coming from it are debug level however they count depends
      # on root level configuration, e.g. root debug level will print most info from tire
      # unfortunately there is currently no better way
      :tire_rest:
        :enabled: false
      :yard:
        :enabled: false
#
# Production environment configuration
#
# The following configuration values override ones from the common section
#
:production:
  :logging:
    :loggers:
      :sql:
        :level: fatal

#
# Development environment configuration
#
# The following configuration values override ones from the common section
#
:development:
  :logging:
    ignored_paths: ['/notices/get_new', '/assets/']
    :colorize: true
    :loggers:
      :root:
        :level: debug
        :type: file
        :age: 'monthly'
        :keep: 1
        :pattern: "[%5l %d %c] %m\n"
        :filename: "development.log"
      :yard:
        :level: info

      # To enable external logs tailing add optional 'tail_command:' option to a logger configuration,
      # standard output of the command is logged. Useful with `tail` command. E.g.
      #
      # tail-pulp:
      #   enabled: true
      #   tail_command: ssh root@a_host -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no tail -f /var/log/pulp/pulp.log
      # tail-cp:
      #   enabled: true
      #   tail_command: ssh root@a_host -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no tail -f /var/log/tomcat6/catalina.out
      # tail-kt-client:
      #   enabled: true
      #   tail_command: tail -f ~/.katello/client.log
      # tail-foreman:
      #   enabled: true
      #   tail_command: tail -f ~/Workspace/redhat/foreman/log/development.log


#
# Test environment configuration
#
# The following configuration values override ones from the common section
#
:test:
  :elastic_index: katello_test
  :logging:
    :colorize: false
    :loggers:
      :root:
        :level: debug
        :type: file
        :age: 'monthly'
        :keep: 1
        :pattern: "[%5l %d %c] %m\n"
        :filename: "test.log"
